steps:
# Build trainer image
- name: 'gcr.io/cloud-builders/docker'
  id: 'Build container image'
  args: [
    'build',
    '.',
    '-t',
    'europe-west3-docker.pkg.dev/mlops-fakenews/mlops-fakenews-container/trainer:latest',
    '-f',
    './docker/trainer.dockerfile'
  ]
  secretEnv:
    - 'SERVICE_ACCOUNT_CREDENTIALS'
- name: 'gcr.io/cloud-builders/docker'
  id: 'Push container image'
  args: [
    'push',
    'europe-west3-docker.pkg.dev/mlops-fakenews/mlops-fakenews-container/trainer:latest'
  ]
# Build predictor image
- name: 'gcr.io/cloud-builders/docker'
  id: 'Build container image predictor'
  args: [
    'build',
    '.',
    '-t',
    'europe-west3-docker.pkg.dev/mlops-fakenews/mlops-fakenews-container/predict:latest',
    '-f',
    './docker/predict.dockerfile'
  ]
  secretEnv:
    - 'SERVICE_ACCOUNT_CREDENTIALS'
- name: 'gcr.io/cloud-builders/docker'
  id: 'Push container image predictor'
  args: [
    'push',
    'europe-west3-docker.pkg.dev/mlops-fakenews/mlops-fakenews-container/predict:latest'
  ]
availableSecrets:
  secretManager:
  - versionName: 'projects/mlops-fakenews/secrets/SERVICE_ACCOUNT_CREDENTIALS/versions/latest'
    env: 'SERVICE_ACCOUNT_CREDENTIALS'
options:
  logging: CLOUD_LOGGING_ONLY
